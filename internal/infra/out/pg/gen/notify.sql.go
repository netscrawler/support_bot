// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: notify.sql

package repogen

import (
	"context"
)

const listAllActiveNotifies = `-- name: ListAllActiveNotifies :many
SELECT id, name, group_id, card_uuid, cron, template_text, title, group_title, chat_id, active, format
FROM notify
WHERE active = TRUE
`

func (q *Queries) ListAllActiveNotifies(ctx context.Context) ([]Notify, error) {
	rows, err := q.db.Query(ctx, listAllActiveNotifies)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Notify
	for rows.Next() {
		var i Notify
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.GroupID,
			&i.CardUuid,
			&i.Cron,
			&i.TemplateText,
			&i.Title,
			&i.GroupTitle,
			&i.ChatID,
			&i.Active,
			&i.Format,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const listAllNotifies = `-- name: ListAllNotifies :many
SELECT id, name, group_id, card_uuid, cron, template_text, title, group_title, chat_id, active, format
FROM notify
`

func (q *Queries) ListAllNotifies(ctx context.Context) ([]Notify, error) {
	rows, err := q.db.Query(ctx, listAllNotifies)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Notify
	for rows.Next() {
		var i Notify
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.GroupID,
			&i.CardUuid,
			&i.Cron,
			&i.TemplateText,
			&i.Title,
			&i.GroupTitle,
			&i.ChatID,
			&i.Active,
			&i.Format,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
